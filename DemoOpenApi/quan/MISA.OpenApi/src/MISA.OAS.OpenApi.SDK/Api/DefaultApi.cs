/* 
 * Employees
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using MISA.OAS.OpenApi.SDK.Client;
using MISA.OAS.OpenApi.SDK.Model;

namespace MISA.OAS.OpenApi.SDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// xóa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>ResponseResult</returns>
        ResponseResult EmployeesDelete (Guid userID);

        /// <summary>
        /// xóa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        ApiResponse<ResponseResult> EmployeesDeleteWithHttpInfo (Guid userID);
        /// <summary>
        /// thêm nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ResponseResult</returns>
        ResponseResult EmployeesPost (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));

        /// <summary>
        /// thêm nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        ApiResponse<ResponseResult> EmployeesPostWithHttpInfo (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));
        /// <summary>
        /// sửa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ResponseResult</returns>
        ResponseResult EmployeesPut (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));

        /// <summary>
        /// sửa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        ApiResponse<ResponseResult> EmployeesPutWithHttpInfo (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));
        /// <summary>
        /// lấy danh sách nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;Employee&gt;</returns>
        List<Employee> GetEmployees ();

        /// <summary>
        /// lấy danh sách nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;Employee&gt;</returns>
        ApiResponse<List<Employee>> GetEmployeesWithHttpInfo ();
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// xóa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>Task of ResponseResult</returns>
        System.Threading.Tasks.Task<ResponseResult> EmployeesDeleteAsync (Guid userID);

        /// <summary>
        /// xóa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseResult>> EmployeesDeleteAsyncWithHttpInfo (Guid userID);
        /// <summary>
        /// thêm nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ResponseResult</returns>
        System.Threading.Tasks.Task<ResponseResult> EmployeesPostAsync (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));

        /// <summary>
        /// thêm nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseResult>> EmployeesPostAsyncWithHttpInfo (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));
        /// <summary>
        /// sửa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ResponseResult</returns>
        System.Threading.Tasks.Task<ResponseResult> EmployeesPutAsync (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));

        /// <summary>
        /// sửa nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<ResponseResult>> EmployeesPutAsyncWithHttpInfo (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam));
        /// <summary>
        /// lấy danh sách nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;Employee&gt;</returns>
        System.Threading.Tasks.Task<List<Employee>> GetEmployeesAsync ();

        /// <summary>
        /// lấy danh sách nhân viên
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;Employee&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Employee>>> GetEmployeesAsyncWithHttpInfo ();
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApi : IDefaultApiSync, IDefaultApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DefaultApi : IDefaultApi
    {
        private MISA.OAS.OpenApi.SDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(String basePath)
        {
            this.Configuration = MISA.OAS.OpenApi.SDK.Client.Configuration.MergeConfigurations(
                MISA.OAS.OpenApi.SDK.Client.GlobalConfiguration.Instance,
                new MISA.OAS.OpenApi.SDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new MISA.OAS.OpenApi.SDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MISA.OAS.OpenApi.SDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = MISA.OAS.OpenApi.SDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(MISA.OAS.OpenApi.SDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = MISA.OAS.OpenApi.SDK.Client.Configuration.MergeConfigurations(
                MISA.OAS.OpenApi.SDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new MISA.OAS.OpenApi.SDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MISA.OAS.OpenApi.SDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = MISA.OAS.OpenApi.SDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DefaultApi(MISA.OAS.OpenApi.SDK.Client.ISynchronousClient client,MISA.OAS.OpenApi.SDK.Client.IAsynchronousClient asyncClient, MISA.OAS.OpenApi.SDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = MISA.OAS.OpenApi.SDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public MISA.OAS.OpenApi.SDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public MISA.OAS.OpenApi.SDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public MISA.OAS.OpenApi.SDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public MISA.OAS.OpenApi.SDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// xóa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>ResponseResult</returns>
        public ResponseResult EmployeesDelete (Guid userID)
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = EmployeesDeleteWithHttpInfo(userID);
             return localVarResponse.Data;
        }

        /// <summary>
        /// xóa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        public MISA.OAS.OpenApi.SDK.Client.ApiResponse< ResponseResult > EmployeesDeleteWithHttpInfo (Guid userID)
        {
            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(MISA.OAS.OpenApi.SDK.Client.ClientUtils.ParameterToMultiMap("", "userID", userID));


            // make the HTTP request
            var localVarResponse = this.Client.Delete< ResponseResult >("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// xóa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>Task of ResponseResult</returns>
        public async System.Threading.Tasks.Task<ResponseResult> EmployeesDeleteAsync (Guid userID)
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = await EmployeesDeleteAsyncWithHttpInfo(userID);
             return localVarResponse.Data;

        }

        /// <summary>
        /// xóa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userID">ID người dùng</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        public async System.Threading.Tasks.Task<MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult>> EmployeesDeleteAsyncWithHttpInfo (Guid userID)
        {

            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(MISA.OAS.OpenApi.SDK.Client.ClientUtils.ParameterToMultiMap("", "userID", userID));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ResponseResult>("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// thêm nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ResponseResult</returns>
        public ResponseResult EmployeesPost (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = EmployeesPostWithHttpInfo(exchangeRateObjectParam);
             return localVarResponse.Data;
        }

        /// <summary>
        /// thêm nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        public MISA.OAS.OpenApi.SDK.Client.ApiResponse< ResponseResult > EmployeesPostWithHttpInfo (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = exchangeRateObjectParam;


            // make the HTTP request
            var localVarResponse = this.Client.Post< ResponseResult >("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// thêm nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ResponseResult</returns>
        public async System.Threading.Tasks.Task<ResponseResult> EmployeesPostAsync (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = await EmployeesPostAsyncWithHttpInfo(exchangeRateObjectParam);
             return localVarResponse.Data;

        }

        /// <summary>
        /// thêm nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        public async System.Threading.Tasks.Task<MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult>> EmployeesPostAsyncWithHttpInfo (ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {

            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = exchangeRateObjectParam;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<ResponseResult>("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// sửa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ResponseResult</returns>
        public ResponseResult EmployeesPut (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = EmployeesPutWithHttpInfo(employeeId, exchangeRateObjectParam);
             return localVarResponse.Data;
        }

        /// <summary>
        /// sửa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>ApiResponse of ResponseResult</returns>
        public MISA.OAS.OpenApi.SDK.Client.ApiResponse< ResponseResult > EmployeesPutWithHttpInfo (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(MISA.OAS.OpenApi.SDK.Client.ClientUtils.ParameterToMultiMap("", "EmployeeId", employeeId));
            localVarRequestOptions.Data = exchangeRateObjectParam;


            // make the HTTP request
            var localVarResponse = this.Client.Put< ResponseResult >("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesPut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// sửa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ResponseResult</returns>
        public async System.Threading.Tasks.Task<ResponseResult> EmployeesPutAsync (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult> localVarResponse = await EmployeesPutAsyncWithHttpInfo(employeeId, exchangeRateObjectParam);
             return localVarResponse.Data;

        }

        /// <summary>
        /// sửa nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="employeeId">ID người dùng</param>
        /// <param name="exchangeRateObjectParam"> (optional)</param>
        /// <returns>Task of ApiResponse (ResponseResult)</returns>
        public async System.Threading.Tasks.Task<MISA.OAS.OpenApi.SDK.Client.ApiResponse<ResponseResult>> EmployeesPutAsyncWithHttpInfo (Guid employeeId, ExchangeRateObjectParam exchangeRateObjectParam = default(ExchangeRateObjectParam))
        {

            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(MISA.OAS.OpenApi.SDK.Client.ClientUtils.ParameterToMultiMap("", "EmployeeId", employeeId));
            localVarRequestOptions.Data = exchangeRateObjectParam;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<ResponseResult>("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("EmployeesPut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// lấy danh sách nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;Employee&gt;</returns>
        public List<Employee> GetEmployees ()
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<List<Employee>> localVarResponse = GetEmployeesWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// lấy danh sách nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;Employee&gt;</returns>
        public MISA.OAS.OpenApi.SDK.Client.ApiResponse< List<Employee> > GetEmployeesWithHttpInfo ()
        {
            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = MISA.OAS.OpenApi.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get< List<Employee> >("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetEmployees", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// lấy danh sách nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;Employee&gt;</returns>
        public async System.Threading.Tasks.Task<List<Employee>> GetEmployeesAsync ()
        {
             MISA.OAS.OpenApi.SDK.Client.ApiResponse<List<Employee>> localVarResponse = await GetEmployeesAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// lấy danh sách nhân viên 
        /// </summary>
        /// <exception cref="MISA.OAS.OpenApi.SDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;Employee&gt;)</returns>
        public async System.Threading.Tasks.Task<MISA.OAS.OpenApi.SDK.Client.ApiResponse<List<Employee>>> GetEmployeesAsyncWithHttpInfo ()
        {

            MISA.OAS.OpenApi.SDK.Client.RequestOptions localVarRequestOptions = new MISA.OAS.OpenApi.SDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Employee>>("/employees", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetEmployees", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
